from os import *
import sys
from pyscons import PYTOOL

platform = ARGUMENTS.get('OS', Platform())

if 'VERILATOR_ROOT' in environ: _VERILATOR =environ['VERILATOR_ROOT']
else: _VERILATOR ='/Users/patriciokaplan/Downloads/verilator-3.846'

libs = Split("boost_python")

if 'BOOST_LIB' in environ: libpath=Split(environ['BOOST_LIB'])
else: libpath=[]

includes = ["include","/usr/include/python2.7", _VERILATOR+'/include']

if 'BOOST_INCLUDE' in environ: includes.append(environ['BOOST_INCLUDE'])

frameworks = Split("Python")

gen_tree = '/home/patricio/Documents/musings_gen/verilog/fifo'
verilator_obj_dir = gen_tree+'/obj_dir'
sys.path.append(gen_tree+'/src')

def verilator_emitter (target, source, env):
	for s in source:
		p = verilator_obj_dir+'/V'+ str(s)[:-2]
		target = [ (p+x) for x in Split('.cpp .h __Syms.cpp __Syms.h __Trace.cpp __Trace__Slow.cpp') ]
	return target,source
	
bld = Builder(action='verilator --Mdir '+verilator_obj_dir+' --trace --cc $SOURCE', emitter=verilator_emitter)

env = Environment(
                  CPPPATH = includes,
                  LIBS = libs,
                  LIBPATH = libpath,
                  FRAMEWORKS = frameworks,
                  SHLIBPREFIX = '',
                  SHLIBSUFFIX = '.dylib',
		  BUILDERS={'Verilator':bld},
		  tools = ['default', PYTOOL(recursive = False)],
		  SRC_TREE=getcwd()
                )
d=env.Dictionary()
d['VERILATOR']=_VERILATOR
d['GEN_TREE']=gen_tree
Export('env')

Repository(env['VERILATOR'])

VariantDir(gen_tree, '.')
env.Verilator('fifo.v')
env.SConscript(gen_tree+'/include/SConscript')
env.SConscript(gen_tree+'/src/SConscript')

env.SConscript('test1/SConscript')
